name: Update Change Log2

on:
  workflow_dispatch:

# ËÆæÁΩÆ GITHUB_TOKEN ÁöÑÊùÉÈôêÔºå‰ª•ÂÖÅËÆ∏ÈÉ®ÁΩ≤Âà∞ GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  update-change-log:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"
      - name: Install github_changelog_generator
        run: |
          gem install github_changelog_generator
      - name: Generate Changelog
        run: |
          github_changelog_generator --help
          github_changelog_generator \
            --token ${{ secrets.GITHUB_TOKEN }} \
            --user nacos-group \
            --project r-nacos \
            --output CHANGELOG.md
          ls -lah .
          cat CHANGELOG.md
      - name: Set Up GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq
      - name: Authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          gh auth setup-git
      - name: Append commit-based changelog
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          BASE_DIR=$PWD
          echo "BASE_DIR ==> $BASE_DIR"
          CHANGELOG_FILE=$BASE_DIR/CHANGELOG.md
          echo "CHANGELOG_FILE ==> $CHANGELOG_FILE"
          sed -i '1i\
            > Â∏∏Áî®ÁöÑÁ¨¶Âè∑ËØ¥ÊòéÔºö\
            > ‚ú®Êñ∞Â¢ûÔºöÁî®‰∫éË°®Á§∫Ê∑ªÂä†Êñ∞ÂäüËÉΩÊàñÊñ∞ÁâπÊÄßÁöÑ‰ªªÂä°„ÄÇ\
            > üõ†Ô∏è‰ºòÂåñÔºöÁî®‰∫éË°®Á§∫‰ª£Á†ÅÈáçÊûÑÊàñÊÄßËÉΩ‰ºòÂåñÁöÑ‰ªªÂä°„ÄÇ\
            > üìñÊñáÊ°£ÔºöÁî®‰∫éË°®Á§∫Êõ¥Êñ∞ÊàñÊ∑ªÂä†ÊñáÊ°£ÁöÑ‰ªªÂä°„ÄÇ\
            > üêõ‰øÆÂ§çÔºöÁî®‰∫éË°®Á§∫‰øÆÂ§çÈîôËØØÊàñÈóÆÈ¢òÁöÑ‰ªªÂä°„ÄÇ\
            > üí•Á†¥ÂùèÊÄßÂèòÊõ¥ÔºöÊåáÁöÑÊòØÂØπ‰ª£Á†Å„ÄÅAPI„ÄÅÂçèËÆÆÊàñÁ≥ªÁªüÁöÑÊõ¥ÊîπÔºåËøô‰∫õÊõ¥ÊîπÂèØËÉΩ‰ºöÂØºËá¥‰æùËµñÊóßÁâàÊú¨ÁöÑÁ≥ªÁªü„ÄÅÂ∫ìÊàñÂ∫îÁî®Á®ãÂ∫èÊó†Ê≥ïÊ≠£Â∏∏Â∑•‰Ωú„ÄÇ\' $CHANGELOG_FILE
          git clone https://github.com/nacos-group/r-nacos.git external-repo
          cd external-repo
          git pull
          TAGS=$(git tag --sort=-creatordate | tr '\n' ' ')
          echo "TAGS ==> $TAGS"
          # Â£∞Êòé map   
          declare -A BODY_MAP
          # ÈÅçÂéÜ TAG Ê†áÁ≠æ
          for TAG in $TAGS; do
            echo "Processing tag: $TAG"
            RELEASE_INFO=$(gh release view $TAG --json tagName,createdAt,author,body,url || echo "NOT_FOUND")
            if [[ "$RELEASE_INFO" == "NOT_FOUND" ]]; then
              continue
            fi
            # Ëé∑ÂèñÊ†áÁ≠æÂêçÁß∞
            TAG_NAME=$(echo "$RELEASE_INFO" | jq -r '.tagName')
            # Ëé∑ÂèñÊ†áÁ≠æËØ¶ÁªÜ‰ø°ÊÅØ
            BODY=$(echo "$RELEASE_INFO" | jq -r '.body')
            echo "==========ÊòæÁ§∫ÊØè‰∏™TAGÂÜÖÂÆπ===ÈôçÁ∫ßÂâçÂºÄÂßã====="
            echo $BODY
            echo "==========ÊòæÁ§∫ÊØè‰∏™TAGÂÜÖÂÆπ===ÈôçÁ∫ßÂâçÁªìÊùü====="
            # ÈôçÁ∫ß Markdown Ê†áÈ¢ò
            # Â∞ÜÊâÄÊúâ # ËΩ¨Êç¢‰∏∫ ##
            BODY=$(echo "$BODY" | sed 's/^### /#### /g')
            BODY=$(echo "$BODY" | sed 's/^## /### /g')
            BODY=$(echo "$BODY" | sed 's/^# /## /g')
            # Âà†Èô§ÂåÖÂê´ "Full Changelog" ÁöÑË°å
            BODY=$(echo "$BODY" | sed '/Full Changelog/d')
            echo "==========ÊòæÁ§∫ÊØè‰∏™TAGÂÜÖÂÆπ===ÈôçÁ∫ßÂêéÂºÄÂßã====="
            echo $BODY
            echo "==========ÊòæÁ§∫ÊØè‰∏™TAGÂÜÖÂÆπ===ÈôçÁ∫ßÂêéÁªìÊùü====="
            # ËÆæÁΩÆÂà∞ Map ‰∏≠
            BODY_MAP["$TAG_NAME"]="$BODY"
          done
          # ÊâìÂç∞ BODY_MAP ÁöÑÂÜÖÂÆπ
          echo "BODY_MAP ÂÜÖÂÆπÔºö"
          # for TAG in "${!BODY_MAP[@]}"; do
          #   echo "Tag: $TAG"
          #   echo "Body: ${BODY_MAP[$TAG]}"
          #   echo "----------------------"
          # done
          # ÂõûÂà∞ÂéüÂßãÁõÆÂΩï
          cd $BASE_DIR
          rm -rf external-repo
          # ÊõøÊç¢
          TEMP_CHANGELOG=$(mktemp)
          while IFS= read -r line; do
            echo "$line" >> "$TEMP_CHANGELOG"
            echo "ÊØèË°åÁöÑÂÜÖÂÆπÊòØÔºö$line"
            for TAG in "${!BODY_MAP[@]}"; do
              # ‰ΩøÁî® \b Á°Æ‰øù TAG ‰Ωú‰∏∫ÂÆåÊï¥ÁöÑÁã¨Á´ãËØçÂá∫Áé∞
              regex="\[\b$TAG\b\]"
              if [[ "$line" =~ $regex ]]; then
                echo "${BODY_MAP[$TAG]}" >> "$TEMP_CHANGELOG"
                echo "ÊèíÂÖ• $TAG ÁöÑ body Âà∞ CHANGELOG"
              fi
            done
          done < "$CHANGELOG_FILE"

          mv "$TEMP_CHANGELOG" "$CHANGELOG_FILE"
          pwd && ls -lah .
          echo "===Êü•ÁúãÁîüÊàêÁöÑÊó•ÂøóÊñá‰ª∂ÂºÄÂ§¥==="
          cat $CHANGELOG_FILE 
          echo "===Êü•ÁúãÁîüÊàêÁöÑÊó•ÂøóÊñá‰ª∂ÁªìÊùü==="
      - name: Move Changelog to docs/notes/change/index.md
        run: |
          BASE_DIR=$PWD
          echo "BASE_DIR ==> $BASE_DIR"
          cd $BASE_DIR
          pwd && ls -lah .   
          mv CHANGELOG.md $BASE_DIR/docs/notes/change/index.md
          rm -rf r-nacos
          cat $BASE_DIR/docs/notes/change/index.md
      - name: Commit and Push Change Log
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Update Change Log"
            git push --force
          else
            echo "No changes to commit"
          fi
      - name: Trigger Docs Publish Workflow
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          gh workflow run docs_publish.yml

name: Update Change Log

on:
    workflow_dispatch:

jobs:
  update-change-log:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
            fetch-depth: 1
      - name: Set External Repository Path
        run: echo "EXTERNAL_REPO=external-repo" >> $GITHUB_ENV           
      - name: git clone rnacos
        run: |
           git clone --depth 1 https://github.com/nacos-group/r-nacos.git ${{ env.EXTERNAL_REPO }}
           cd ${{ env.EXTERNAL_REPO }}
           git fetch --tags      
      - name: Set Up GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          gh auth setup-git
      - name: Generate Change Log
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}      
        run: |
          BASE_DIR=$PWD
          echo "BASE_DIR ==> $BASE_DIR"
          CHANGELOG_FILE=$BASE_DIR/changelog.md
          echo "CHANGELOG_FILE ==> $CHANGELOG_FILE"
          echo -e "> 常用的符号说明：\n>\n> ✨新增：用于表示添加新功能或新特性的任务。\n>\n> 🛠️优化：用于表示代码重构或性能优化的任务。\n>\n> 📖文档：用于表示更新或添加文档的任务。\n>\n> 🐛修复：用于表示修复错误或问题的任务。\n>\n> 💥破坏性变更：指的是对代码、API、协议或系统的更改，这些更改可能会导致依赖旧版本的系统、库或应用程序无法正常工作。\n" > $CHANGELOG_FILE
          echo "" >> $CHANGELOG_FILE
          cd ${{ env.EXTERNAL_REPO }}
          TAGS=$(git tag --sort=-creatordate | tr '\n' ' ')
          echo "TAGS ==> $TAGS"
          for TAG in $TAGS; do
            echo "Processing tag: $TAG"
            RELEASE_INFO=$(gh release view $TAG --json tagName,createdAt,author,body,url || echo "NOT_FOUND")
            if [[ "$RELEASE_INFO" == "NOT_FOUND" ]]; then
              continue
            fi
            CREATED_AT=$(echo "$RELEASE_INFO" | jq -r '.createdAt')
            TAG_NAME=$(echo "$RELEASE_INFO" | jq -r '.tagName')
            AUTHOR=$(echo "$RELEASE_INFO" | jq -r '.author.login')
            BODY=$(echo "$RELEASE_INFO" | jq -r '.body')
            URL=$(echo "$RELEASE_INFO" | jq -r '.url')
            FORMAT_TIME=$(echo "$CREATED_AT" | sed 's/T[0-9:]\{8\}Z//')
            echo "## [$TAG_NAME]($URL) $FORMAT_TIME" >> $CHANGELOG_FILE
            echo "Released by @$AUTHOR on $CREATED_AT" >> $CHANGELOG_FILE
            echo "" >> $CHANGELOG_FILE
            echo "$BODY" >> $CHANGELOG_FILE
            echo "" >> $CHANGELOG_FILE
          done
          cd $BASE_DIR
          rm -rf external-repo
          pwd && ls -lah .   
          mv $CHANGELOG_FILE $BASE_DIR/docs/zh/change/index.md
          cat $BASE_DIR/docs/zh/change/index.md
      - name: Commit and Push Change Log
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            if [ -n "$(git status --porcelain)" ]; then
              git add .
              git commit -m "Update Change Log"
              git push --force
            else
              echo "No changes to commit"
            fi
      - name: Trigger Docs Publish Workflow
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
           gh workflow run docs_publish.yml       


